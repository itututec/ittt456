# 版本：v251006
# 作者：ittt456
# 适用：用作Clash-Party覆写模板
# 备注：部分功能可选，可通过#注释或取消#注释实现是否可用，同样功能的不建议同时使用容易出问题；默认带ICON，不需要可#注释掉或直接删除
# 声明：仅作学习用，不得用于违法用途，不为使用后果负责

#####↓↓↓ -------------------- 简化版覆写模板 以下部分不需要 -------------------- ↓↓↓#####
# ## 全局基础配置
# port: 7890                    # HTTP 代理端口，默认 7890
# socks-port: 7891              # SOCKS5 代理端口，默认 7891
# redir-port: 7892
# mixed-port: 7893
# tproxy-port: 7894
# ipv6: false
# allow-lan: true               # 是否允许局域网设备连接
# unified-delay: true
# tcp-concurrent: true
  
# geodata-mode: false
# geodata-loader: standard
# geo-auto-update: true
# geo-update-interval: 48
# geox-url:
#   geoip: "https://testingcf.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@release/geoip.dat"
#   geosite: "https://testingcf.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@release/geosite.dat"
#   mmdb: "https://testingcf.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@release/country.mmdb"
#   asn: "https://github.com/xishang0128/geoip/releases/download/latest/GeoLite2-ASN.mmdb"
  
# ## 控制面板
# external-controller: 0.0.0.0:9090       # 外部控制面板端口
# secret: ""
# external-ui: ui
# external-ui-url: "https://github.com/MetaCubeX/metacubexd/archive/refs/heads/gh-pages.zip"

# ## 匹配进程 always/strict/off
# find-process-mode: strict
# global-client-fingerprint: chrome
# keep-alive-idle: 600
# keep-alive-interval: 30

# ## 策略组选择和fakeip缓存
# profile:
#   store-selected: true
#   store-fake-ip: true
  
# ## 流量嗅探
# sniffer:
#   enable: true
#   sniff:
#     HTTP:
#       ports: [80, 8080-8880]
#       override-destination: true
#     TLS:
#       ports: [443, 8443]
#     QUIC:
#       ports: [443, 8443]
#   force-domain:
#     - +.v2ex.com
#   skip-domain:
#     - "Mijia Cloud"
#     - "dlg.io.mi.com"
#     - "+.push.apple.com"
#     - "+.apple.com"
#     - "+.baidu.com"
    
# ## 代理模式
# tun:
#   enable: true
#   stack: mixed
#   mtu: 9000
#   dns-hijack:
#     - "any:53"
#     - "tcp://any:53"
#   auto-route: true
#   auto-redirect: true
#   auto-detect-interface: true
  
# ## DNS 配置
# #--------------------DNS各项设置官方说明 https://merlinkodo.github.io/Clash-Rev-Doc/config/dns/#nameserver-policy
# dns:
#   enable: true

# # 开启 DNS 服务器监听
#   listen: 0.0.0.0:1053

#   ipv6: false

# # 配置后面的nameserver、fallback和nameserver-policy向dns服务器的连接过程是否遵守遵守rules规则
# # 如果为false（默认值）则这三部分的dns服务器在未特别指定的情况下会直连
# # 如果为true，将会按照rules的规则匹配链接方式（走代理或直连），如果有特别指定则任然以指定值为准
# # 仅当proxy-server-nameserver非空时可以开启此选项, 强烈不建议和prefer-h3一起使用
# # 此外，这三者配置中的dns服务器如果出现域名会采用default-nameserver配置项解析，也请确保正确配置default-nameserver
#   respect-rules: true
  
# # 模式切换 redir-host / fake-ip
#   enhanced-mode: fake-ip
# #fake-ip 池设置
#   fake-ip-range: 198.18.0.1/16
  
# # 配置fake-ip-filter的匹配模式，默认为blacklist，即如果匹配成功不返回fake-ip
# # 可设置为whitelist，即只有匹配成功才返回fake-ip
#   fake-ip-filter-mode: blacklist
  
#  # 配置不使用 fake-ip 的域名
#   fake-ip-filter:
#     - "+.lan"
#     - "+.local"
#     - "rule-set:private_domain,cn_domain"
#     - "+.services.googleapis.cn"
#     - "+.msftconnecttest.com"
#     - "+.msftncsi.com"
#     - "time.*.com"
#     - "+.pool.ntp.org"
#     - "+.ntp.tencent.com"
#     - "+.ntp1.aliyun.com"
#     - "+.ntp.ntsc.ac.cn"
#     - "+.cn.ntp.org.cn"

# # 用于解析 nameserver，fallback 以及其他 DNS 服务器配置的DNS 服务域名
# # 只能使用纯 IP 地址，可使用加密 DNS
#   default-nameserver:
#     - 223.5.5.5
#     - 119.29.29.29

# # 专用于 直连direct出口域名解析的 DNS 服务器，非必要配置项，如果不填则遵循nameserver-policy、nameserver和fallback的配置
#   direct-nameserver:
#     - 223.5.5.5
#   direct-nameserver-follow-policy: false    # 是否遵循nameserver-policy，默认为不遵守，仅当direct-nameserver不为空时生效

# # 专用于 代理节点域名解析的 DNS 服务器，非必要配置项，如果不填则遵循nameserver-policy、nameserver和fallback的配置
#   proxy-server-nameserver:
#     - 223.5.5.5
#     - 119.29.29.29

#  # 配置查询指定域名使用的 DNS 服务器
#   nameserver-policy:
#     '+.baidu.com': '114.114.114.114'
#     "rule-set:private_domain,cn_domain":
#       - 223.5.5.5
#       - 119.29.29.29
#     "rule-set:gfw_domain,geolocation-!cn":
#       - "https://dns.cloudflare.com/dns-query"
#       - "https://dns.google/dns-query" 
# # namesever尽量用运营商提供的DNS
#   nameserver:
#     - 223.5.5.5
#     - 119.29.29.29
#####↑↑↑ -------------------- 简化版覆写模板 以上部分不需要 -------------------- ↑↑↑#####


## 出站策略组
proxy-groups:
  - name: ManualSwitch  #手动切换具体节点
    icon: https://fastly.jsdelivr.net/gh/shindgewongxj/WHATSINStash@master/icon/select.png
    type: select
    include-all: true
#    filter: "(?=.*(港|HK|(?i)Hong|Hongkong|HK))^((?!(台|日|韩|新|美|SK5|SOCKS5)).)*$"}                        # 包含节点(?=.*(港|HK|(?i)Hong|Hongkong|HK))，同时不包含节点^((?!(台|日|韩|新|美|SK5|SOCKS5)).)
    filter: "^((?!(到期|硬盘服|资源服|教学服|邮箱|国内|永久|基础服|折扣码|涨价|折|优惠|交流|讨论|emby|Emby)).)*$"        # 不包含 到期|硬盘服|资源服... 等其他杂项节点
  - name: DefaultProxy  #手动选择策略组分类
    icon: https://fastly.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/Proxy.png
    type: select
    proxies:
      - ManualSwitch
      - ALL AUTO
      - HK AUTO
      - SG AUTO
      - TW AUTO
      - JP AUTO
      - US AUTO
      - DIRECT

### 链式代理(组)配置
## -------------------- 先定义中继节点组 -------------------- ##
## a 中继节点组——辅助链式代理进行使用，可以根据需要定义，也可直接使用上述现成的策略组作为中继节点组
# 华东中继组（Eastern China简写为East，包括 台湾/日本/美洲 等节点）→→→落地是去向 东亚/美洲 的住宅SK5节点
  - {name: EC2Base, type: select, proxies: [JP AUTO, TW AUTO], icon: https://fastly.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/BosLife_1.png}           #手动切换华东中继策略组
#  - {name: EC2Base, type: url-test, include-all: true, tolerance: 20, interval: 300, icon: https://fastly.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/BosLife_1.png, filter: "(?=.*(台|TW|(?i)Taiwan|TW|日|JP|(?i)Japan))^((?!(尼日利亚|港|韩|新|SK5|SOCKS5)).)*$"}          # 自动从华东中继节点中的筛选节点中选择自动测速最低的作为中继节点
# 华南中继组（Southern China简写SC，包括 香港/新加坡/欧洲 等节点），手动选择华东中继策略组→→→落地是去向 东南亚(越南/印尼/马来西亚/新加坡)/欧洲 的住宅SK5节点
  - {name: SC2Base, type: select, proxies: [HK AUTO, SG AUTO], icon: https://fastly.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/BosLife_1.png}          #手动切换华南中继策略组
#  - {name: SC2Base, type: url-test, include-all: true, tolerance: 20, interval: 300, icon: https://fastly.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/BosLife_1.png, filter: "(?=.*(港|HK|(?i)Hong|Hongkong|HK|新加坡|坡|狮城|SG|Singapore))^((?!(台|韩|日|美|SK5|SOCKS5)).)*$"}          # 自动从华南中继节点中的筛选节点中选择自动测速最低的作为中继节点
  
## -------------------- dialer-proxy 链式代理 -------------------- ##
## b 基于关键字dialer-proxy的链式代理做法——推荐用法——也是官方最新推出的方法；
# 1.1 在proxies下添加节点时，需额外定义关键字dialer-proxy指向中继节点或中继节点组，表示通过中继节点连到落地节点；

## -------------------- relay 链式代理 -------------------- ##
## c 基于关键字relay的链式代理做法——不推荐，有很多缺点(如udp异常/grpc延迟过高等)——官方已有新方法即dialer-proxy，但relay依然可用；
# 1.1 只需在本模板文件中定义好type为relay的链式代理节点组，不需要在proxies下添加落地节点时额外定义关键字dialer-proxy信息，配置相对简单。
#  - {name: EC2US, type: relay, proxies: [中继节点(组)名称, 落地节点(组)名称]}                              #范例基本书写格式，表示通过 中继节点(组)→→→落地节点(组)
# 👉👉👉↓↓↓以下四行是实际范例书写格式和注释说明↓↓↓
#  - {name: DestSK5, type: select, include-all: true, filter: "(?i)链|链式代理|SK5|(?i)SOCKS5"}          #范例落地节点组，包含住宅SOCKS5节点
#  - {name: EC2SK5, type: select, proxies: [JP AUTO, TW AUTO]}                                         #范例华东中继组，包含JP AUTO, TW AUTO等策略组的节点
#  - {name: SC2SK5, type: select, proxies: [HK AUTO, SG AUTO]}                                         #范例华南中继组，包含HK AUTO, SG AUTO等策略组的节点
#  - {name: relay链代, type: relay, proxies: [EC2SK5, LandingSK5]}                                      #范例relay链式代理，表示通过 中继节点(组)EC2SK5→→→落地节点(组)LandingSK5
  # relay特别说明(参考https://clash-meta.gitbook.io/clash.meta-wiki-older/function/proxygroups/relay 和 https://merlinkodo.github.io/Clash-Rev-Doc/config/proxy-groups/relay/)：
   # 1 relay支持传输UDP，前提是代理链的头尾节点都要支持 UDP over TCP。目前支持 udp 的协议有 vmess/vless/trojan/ss/ssr/tuic/hy，不支持udp协议的是不能使用relay实现链式代理的；
   # 2 添加type为relay的代理组，且该代理组的节点顺序是，打底/中继节点(组)名称在前，落地socks5节点(组)名称在后(落地节点必须支持udp协议，设置建议打开udp为true)；
   # 3 为保证设置好的 relay链式代理 可以在clash内核的UI界面中被选择到，需要在Proxy Groups中的 手动选择组里面包含有上面定义好的 relay链式代理 名称，否则虽然定义了该链式代理，但无法在UI中选择也是白搭。
      
# 落地节点组，包括住宅节点（命名需带 SK5|SOCKS5|住宅 等字样）
  - {name: DestSK5, type: select, include-all: true, filter: "(?i)链|链式代理|SK5|HTTP|SOCKS5|住宅", icon: https://fastly.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/DE.png}
# 自定义节点组，包括自己部署的节点 和 获取的免费节点（免费节点命名需带 free|Free|免费 等字样）
  - {name: CustomAll, type: select, include-all: true, filter: "(?i)free|Free|免费|rn|racknerd|RN|cc|colocrossingnc|netcup|serv00|hostuno|lunes|sap", icon: https://fastly.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/Static.png}

## ↓↓↓以下策略组自动测速自动选择节点↓↓↓
  - name: ALL AUTO
    icon: https://fastly.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/Auto.png
    include-all: true
    exclude-filter: (?i)GB|Traffic|Expire|Premium|频道|订阅|ISP|流量|到期|重置
    type: url-test
    interval: 300
  - name: HK AUTO
    icon: https://fastly.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/Hong_Kong.png
    include-all: true
    exclude-filter: (?i)GB|Traffic|Expire|Premium|频道|订阅|ISP|流量|到期|重置
    filter: (?i)香港|Hong Kong|HK|🇭🇰
    type: url-test
    interval: 300
  - name: SG AUTO
    icon: https://fastly.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/Singapore.png
    include-all: true
    exclude-filter: (?i)GB|Traffic|Expire|Premium|频道|订阅|ISP|流量|到期|重置
    filter: (?i)新加坡|Singapore|SG|🇸🇬
    type: url-test
    interval: 300
  - name: TW AUTO
    icon: https://fastly.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/Taiwan.png
    include-all: true
    exclude-filter: (?i)GB|Traffic|Expire|Premium|频道|订阅|ISP|流量|到期|重置
    filter: (?i)台湾|Taiwan|TW|🇹🇼
    type: url-test
    interval: 300
  - name: JP AUTO
    icon: https://fastly.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/Japan.png
    include-all: true
    exclude-filter: (?i)GB|Traffic|Expire|Premium|频道|订阅|ISP|流量|到期|重置
    filter: (?i)日本|Japan|JP|🇯🇵
    type: url-test
    interval: 300
  - name: US AUTO
    icon: https://fastly.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/United_States.png
    include-all: true
    exclude-filter: (?i)GB|Traffic|Expire|Premium|频道|订阅|ISP|流量|到期|重置
    filter: (?i)美国|USA|🇺🇸
    type: url-test
    interval: 300
## ↓↓↓以下策略组通过手动选择节点↓↓↓
  - name: AIGC
    icon: https://fastly.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/Bot.png
    type: select
    proxies:
      - SG AUTO
      - JP AUTO
      - US AUTO
  - name: Telegram
    icon: https://fastly.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/Telegram.png
    type: select
    proxies:
      - HK AUTO
      - SG AUTO
      - TW AUTO
      - JP AUTO
      - US AUTO
  - name: Google
    icon: https://fastly.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/Google_Search.png
    type: select
    proxies:
      - HK AUTO
      - SG AUTO
      - TW AUTO
      - JP AUTO
      - US AUTO
# ↓↓↓全局策略组↓↓↓
  - name: GLOBAL
    icon: https://fastly.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/Global.png
    type: select
    include-all: true
    exclude-filter: (?i)GB|Traffic|Expire|Premium|频道|订阅|ISP|流量|到期|重置
    proxies:
      - DefaultProxy
      - ManualSwitch
      - ALL AUTO
      - AIGC
      - Telegram
      - Google
      - HK AUTO
      - SG AUTO
      - TW AUTO
      - JP AUTO
      - US AUTO

#匹配规则
rules:
  - "RULE-SET,private_domain,DIRECT"
  - "RULE-SET,bing,AIGC"
  - "RULE-SET,copilot,AIGC"
  - "RULE-SET,bard,AIGC"
  - "RULE-SET,openai,AIGC"
  - "RULE-SET,claude,AIGC"
  - "RULE-SET,steam,DefaultProxy"
  - "RULE-SET,telegram_domain,Telegram"
  - "RULE-SET,telegram_ip,Telegram"
  - "RULE-SET,google_domain,Google"
  - "RULE-SET,google_ip,Google"
  - "RULE-SET,gfw_domain,DefaultProxy"
  - "RULE-SET,geolocation-!cn,DefaultProxy"
  - "RULE-SET,cn_domain,DIRECT"
  - "RULE-SET,cn_ip,DIRECT"
  - "MATCH,DefaultProxy"

#规则集
rule-providers:
  private_domain:
    url: https://ghfast.top/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/private.yaml
    path: ./ruleset/private.yaml
    behavior: domain
    interval: 86400
    format: yaml
    type: http
  cn_domain:
    url: https://ghfast.top/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/cn.yaml
    path: ./ruleset/cn_domain.yaml
    behavior: domain
    interval: 86400
    format: yaml
    type: http
  telegram_domain:
    url: https://ghfast.top/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/telegram.yaml
    path: ./ruleset/telegram_domain.yaml
    behavior: domain
    interval: 86400
    format: yaml
    type: http
  google_domain:
    url: https://ghfast.top/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/google.yaml
    path: ./ruleset/google_domain.yaml
    behavior: domain
    interval: 86400
    format: yaml
    type: http
  gfw_domain:
    url: https://ghfast.top/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/gfw.yaml
    path: ./ruleset/gfw.yaml
    behavior: domain
    interval: 86400
    format: yaml
    type: http
  geolocation-!cn:
    url: https://ghfast.top/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/geolocation-!cn.yaml
    path: ./ruleset/geolocation-!cn.yaml
    behavior: domain
    interval: 86400
    format: yaml
    type: http
  cn_ip:
    url: https://ghfast.top/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/cn.yaml
    path: ./ruleset/cn_ip.yaml
    behavior: ipcidr
    interval: 86400
    format: yaml
    type: http
  telegram_ip:
    url: https://ghfast.top/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/telegram.yaml
    path: ./ruleset/telegram_ip.yaml
    behavior: ipcidr
    interval: 86400
    format: yaml
    type: http
  google_ip:
    url: https://ghfast.top/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/google.yaml
    path: ./ruleset/google_ip.yaml
    behavior: ipcidr
    interval: 86400
    format: yaml
    type: http
  bing:
    url: https://ghfast.top/https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Bing/Bing.yaml
    path: ./ruleset/bing.yaml
    behavior: classical
    interval: 86400
    format: yaml
    type: http
  copilot:
    url: https://ghfast.top/https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Copilot/Copilot.yaml
    path: ./ruleset/copilot.yaml
    behavior: classical
    interval: 86400
    format: yaml
    type: http
  claude:
    url: https://ghfast.top/https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Claude/Claude.yaml
    path: ./ruleset/claude.yaml
    behavior: classical
    interval: 86400
    format: yaml
    type: http
  bard:
    url: https://ghfast.top/https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/BardAI/BardAI.yaml
    path: ./ruleset/bard.yaml
    behavior: classical
    interval: 86400
    format: yaml
    type: http
  openai:
    url: https://ghfast.top/https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/OpenAI/OpenAI.yaml
    path: ./ruleset/openai.yaml
    behavior: classical
    interval: 86400
    format: yaml
    type: http
  steam:
    url: https://ghfast.top/https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Steam/Steam.yaml
    path: ./ruleset/steam.yaml
    behavior: classical
    interval: 86400
    format: yaml
    type: http



